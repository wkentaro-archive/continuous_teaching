<launch>
  <arg name="filename" default="$(find continuous_teaching)/data/teach_cola.bag" />
  <arg name="options" default="--clock --loop" />
  <param name="/use_sim_time" value="true" />

  <node name="rosbag_play"
        pkg="rosbag"
        type="play"
        args="$(arg filename) $(arg options)" />

  <arg name="MANAGER" value="nodelet_manager" />
  <node name="$(arg MANAGER)"
        pkg="nodelet"
        type="nodelet"
        args="manager" />

  <group ns="/camera/rgb">
    <node name="republish_color"
          pkg="image_transport" type="republish"
          args="compressed raw">
      <remap from="in" to="image_raw" />
      <remap from="out" to="image_raw" />
    </node>
    <node name="rectify"
          pkg="nodelet" type="nodelet"
          args="load image_proc/rectify /$(arg MANAGER)">
      <remap from="image_mono" to="image_raw" />
      <remap from="image_rect" to="image_rect_color" />
    </node>
  </group>

  <group ns="/camera/depth_registered">
    <node name="republish_depth"
          pkg="image_transport" type="republish"
          args="compressedDepth raw">
      <remap from="in" to="image_raw" />
      <remap from="out" to="image_raw" />
    </node>
    <node name="rectify"
          pkg="nodelet" type="nodelet"
          args="load image_proc/rectify /$(arg MANAGER)">
      <remap from="image_mono" to="image_raw" />
    </node>
  </group>
  <group ns="/camera">
    <node name="point_cloud_xyzrgb"
          pkg="nodelet" type="nodelet"
          args="load depth_image_proc/point_cloud_xyzrgb /$(arg MANAGER)">
      <rosparam>
        queue_size: 100
      </rosparam>
    </node>
  </group>

  <node name="passthrough_y"
        pkg="nodelet" type="nodelet"
        args="load pcl/PassThrough $(arg MANAGER)">
    <remap from="~input" to="/camera/depth_registered/points" />
    <rosparam>
      input_frame: odom
      filter_field_name: y
      filter_limit_min: -0.4
      filter_limit_max: 0.4
      keep_organized: true
    </rosparam>
  </node>

  <node name="passthrough_x"
        pkg="nodelet" type="nodelet"
        args="load pcl/PassThrough $(arg MANAGER)">
    <remap from="~input" to="passthrough_y/output" />
    <rosparam>
      input_frame: odom
      filter_field_name: x
      filter_limit_min: 1.0
      filter_limit_max: 2.0
      keep_organized: true
    </rosparam>
  </node>

  <node name="point_cloud_to_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/PointCloudToMaskImage $(arg MANAGER)">
    <remap from="~input" to="passthrough_x/output" />
  </node>
  <node name="convex_hull_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ConvexHullMaskImage $(arg MANAGER)">
    <remap from="~input" to="point_cloud_to_mask_image/output" />
  </node>

  <param name="robot_description"
         textfile="$(find hrpsys_ros_bridge_tutorials)/models/$(optenv ROBOT)_WH_SENSORS.urdf" />

  <include file="$(find jsk_perception)/launch/fcn_object_segmentation.launch">
    <arg name="GPU" value="0" />
    <arg name="INPUT_IMAGE" value="/camera/rgb/image_rect_color" />
  </include>

  <node name="label_to_mask"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/LabelToMaskImage $(arg MANAGER)">
    <remap from="~input" to="fcn_object_segmentation/output" />
    <rosparam>
      label_value: 15
    </rosparam>
  </node>
  <node name="image_resizer"
        pkg="nodelet" type="nodelet"
        args="standalone resized_image_transport/ImageResizer $(arg MANAGER)">
    <remap from="~input/image" to="label_to_mask/output" />
    <rosparam>
      use_camera_info: false
      resize_scale_x: 0.5
      resize_scale_y: 0.5
      interpolation: NEAREST
    </rosparam>
  </node>
  <node name="multiply_mask"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_perception/MultiplyMaskImage $(arg MANAGER)">
    <remap from="~input/src1" to="convex_hull_mask_image/output" />
    <remap from="~input/src2" to="image_resizer/output/image" />
    <rosparam>
      approximate_sync: true
    </rosparam>
  </node>

  <node name="apply_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ApplyMaskImage $(arg MANAGER)">
    <remap from="~input" to="/camera/rgb/image_rect_color" />
    <remap from="~input/mask" to="multiply_mask/output" />
    <rosparam>
      approximate_sync: true
      clip: false
    </rosparam>
  </node>

  <node name="rviz"
        pkg="rviz"
        type="rviz"
        args="-d $(find continuous_teaching)/rvizconfig/default.rviz">
  </node>

</launch>
